

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://0.0.0.0:4000/</id>
  <title>Jiangker</title>
  <subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle>
  <updated>2024-08-01T15:10:10+08:00</updated>
  <author>
    <name>jiangker</name>
    <uri>http://0.0.0.0:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://0.0.0.0:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://0.0.0.0:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2024 jiangker </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Android PDF的读取和写入</title>
    <link href="http://0.0.0.0:4000/posts/pdf/" rel="alternate" type="text/html" title="Android PDF的读取和写入" />
    <published>2024-08-01T14:08:00+08:00</published>
  
    <updated>2024-08-01T14:08:00+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/pdf/</id>
    <content src="http://0.0.0.0:4000/posts/pdf/" />
    <author>
      <name>jiangker</name>
    </author>

  
    
    <category term="Android" />
    
  

  
    <summary>
      





      官方组件

主要依赖PdfRenderer来进行读取，读取到会转换位bitmap，就可以展示到页面中去。然后使用PdfDocument来进行写回，这里主要是canvas的绘制。

简单制作一个绘制，然后将结果保存到文件的功能

PDF读取

val resources = this.resources
val dm = resources.displayMetrics
val screenWidth = dm.widthPixels

val pdfFile = ParcelFileDescriptor.open(
    File(filesDir.path + "/api.pdf"),
    ParcelFileDescriptor.MODE_READ_ONLY
)
// pdf 总的高度
var totalHeight = 0F
// 存储pdf的页面bitmap
val p...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenCV 图像操作</title>
    <link href="http://0.0.0.0:4000/posts/open_cv/" rel="alternate" type="text/html" title="OpenCV 图像操作" />
    <published>2024-07-31T19:36:00+08:00</published>
  
    <updated>2024-07-31T15:25:18+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/open_cv/</id>
    <content src="http://0.0.0.0:4000/posts/open_cv/" />
    <author>
      <name>jiangker</name>
    </author>

  
    
    <category term="opencv" />
    
  

  
    <summary>
      





      OpenCv 基础函数

读取图片

img = cv.imread('img.png', 0)



  0：灰度图模式加载
  1：正常加载图片


展示图片

cv.imshow('image', img)
cv.waitKey(0)
cv.destroyAllWindows()




waitKey(0) 表示等待按任意键继续执行，destroyAllWindows()销毁所有窗口

裁剪

img = cv.imread('img.png', 0)
show = img[80:350, 170:400]
cv.imshow('image', show)
cv.waitKey(0)
cv.destroyAllWindows()




img[80:350, 170:400]表示截取y轴80-350和x轴170-400范围内的图片区域

打印图片

正常打印

img = ...
    </summary>
  

  </entry>

  
  <entry>
    <title>rustlings 学习和答案</title>
    <link href="http://0.0.0.0:4000/posts/rustlings/" rel="alternate" type="text/html" title="rustlings 学习和答案" />
    <published>2024-07-08T16:26:00+08:00</published>
  
    <updated>2024-07-25T18:00:44+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/rustlings/</id>
    <content src="http://0.0.0.0:4000/posts/rustlings/" />
    <author>
      <name>jiangker</name>
    </author>

  
    
    <category term="Rust" />
    
  

  
    <summary>
      





      前言


  去年年中对rust进行了一个大概的学习，然后完成了rustlings的笔记，最后改写了我的两个简单的java项目。今年回首，又感觉比较陌生了，所以准备在此记录一下rustlings的题解和一些笔记。


相关资料


  Rust The Book
  Rust By Example
  rustlings
  Rust Course
  jiangkerLove/rustlings


Intro


  Rust uses the print! and println! macros to print text to the console.


intro2.ts

打印写错了，改为

println!("Hello world!");


print

rust的打印是不换行的print!()以及换行的println!()，这两个都是宏函数

Further i...
    </summary>
  

  </entry>

  
  <entry>
    <title>Ubuntu安装Anaconda3创建python环境</title>
    <link href="http://0.0.0.0:4000/posts/anaconda3/" rel="alternate" type="text/html" title="Ubuntu安装Anaconda3创建python环境" />
    <published>2024-05-20T12:42:00+08:00</published>
  
    <updated>2024-05-20T12:42:00+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/anaconda3/</id>
    <content src="http://0.0.0.0:4000/posts/anaconda3/" />
    <author>
      <name>jiangker</name>
    </author>

  
    
    <category term="Ubuntu" />
    
  

  
    <summary>
      





      下载Anaconda3

这里使用的ubuntu版本为20.04，python版本对应的是3.10，根据release-notes可以看出，最新版也是支持3.10的，所以直接下载最新版官网下载或者清华源，我这里直接命令行下载最新版

wget https://repo.anaconda.com/archive/Anaconda3-2024.02-1-Linux-x86_64.sh


因为需要安装在非root用户下，所以给他增加执行权限

chmod 777 Anaconda3-2024.02-1-Linux-x86_64.sh


运行安装，需要注意，这里协议查看是，直接按空格也是可以跳过的，不一定是回车，回车可能导致点多了退出

./Anaconda3-2024.02-1-Linux-x86_64.sh


最后输入yes，然后等待下载和安装

初始化

前面的安装，anacon...
    </summary>
  

  </entry>

  
  <entry>
    <title>Ubuntu开启SSH访问</title>
    <link href="http://0.0.0.0:4000/posts/openssh/" rel="alternate" type="text/html" title="Ubuntu开启SSH访问" />
    <published>2024-05-11T11:39:00+08:00</published>
  
    <updated>2024-05-11T11:39:00+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/openssh/</id>
    <content src="http://0.0.0.0:4000/posts/openssh/" />
    <author>
      <name>jiangker</name>
    </author>

  
    
    <category term="Ubuntu" />
    
  

  
    <summary>
      





      安装SSH服务器

sudo apt update
sudo apt install -y openssh-server


启动SSH服务

sudo systemctl start ssh


确认SSH服务状态
sudo systemctl status ssh


（可选）设置防火墙
sudo ufw allow ssh


设置SSH服务为开机启动
sudo systemctl enable ssh


    </summary>
  

  </entry>

</feed>


